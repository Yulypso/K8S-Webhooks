apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ws-role
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thierry
  namespace: webhookserver-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thierry
roleRef: 
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ws-role
subjects: 
- kind: ServiceAccount
  name: thierry
  namespace: webhookserver-ns
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-dsl
  namespace: webhookserver-ns
immutable: true
data:
  common.conf: |-
    {
        "add":[
            {
                "path":"$.spec.securityContext.runAsNonRoot",
                "value":true
            }
        ],
        "remove":[
            {
                "path":"$.spec.volumes[*].hostPath"
            },
            {
                "path":"$.spec.securityContext.runAsNonRoot",
                "value":false
            }
        ],
        "mandatorydata":[
            {
                "path":"$.spec.securityContext.runAsNonRoot",
                "value":true
            }
        ],
        "forbiddendata":[
            {
                "path":"$.spec.volumes[*].hostPath"
            },
            {
                "path": "$.spec.securityContext.runAsUser",
                "value": 0
            },
            {
                "path":"$.spec.securityContext.runAsNonRoot",
                "value":false
            }
        ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhookserver
  namespace: webhookserver-ns
  labels: 
    app: webhookserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhookserver
  template:
    metadata:
      labels:
        app: webhookserver
    spec:
      securityContext:
        fsGroup: 1007
      serviceAccountName: thierry
      volumes:
      - name: webhookserver-secret
        secret:
          secretName: webhookserver-tls
      - name: webhookserver-data
        persistentVolumeClaim:
          claimName: webhook-pvc
      - name: webhookserver-common-dsl
        configMap:
          name: common-dsl
      containers:
      - name: webhookserver
        image: yulypso/webhookserver:v0.0.6
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
        resources: 
          limits:
            memory: 512Mi
            cpu: "1"
        ports:
        - containerPort: 8443
          name: webhook-port
        volumeMounts:
        - name: webhookserver-secret
          mountPath: /etc/secrets/tls
          readOnly: true
        - name: webhookserver-data
          mountPath: /home/app/dev/webhook-pv/data
          readOnly: false
        - name: webhookserver-common-dsl
          mountPath: /home/app/dev/webhook-configmap/data
          readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: webhookserver
  namespace: webhookserver-ns
spec:
  selector:
    app: webhookserver
  ports:
    - port: 443
      targetPort: webhook-port # 8443
---
apiVersion: v1
kind: Service
metadata:
  name: webhookserver-external
  namespace: webhookserver-ns
spec:
  selector:
    app: webhookserver
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31000
      protocol: TCP
  type: NodePort 