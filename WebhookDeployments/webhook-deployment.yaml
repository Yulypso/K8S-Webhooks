---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ws-role
rules:
- apiGroups: [""]
  resources: ["namespaces", "deployments", "pods", "services"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thierry
  namespace: webhookserver-namespace
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thierry
roleRef: 
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ws-role
subjects: 
- kind: ServiceAccount
  name: thierry
  namespace: webhookserver-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhookserver
  #namespace: webhookserver-namespace
  labels: 
    app: webhookserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhookserver
  template:
    metadata:
      labels:
        app: webhookserver
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1700
      containers:
      - name: webhookserver
        image: yulypso/node-app:v0.0.1
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "500m"
        ports:
        - containerPort: 8443
          name: webhook-port
        volumeMounts:
        - name: webhookserver-volume
          mountPath: /etc/secrets/tls
          readOnly: true
      #serviceAccountName: thierry
      volumes:
      - name: webhookserver-volume
        secret:
          secretName: webhookserver-tls
---
apiVersion: v1
kind: Service
metadata:
  name: webhookserver
  #namespace: webhookserver-namespace
spec:
  selector:
    app: webhookserver
  ports:
    - port: 443
      targetPort: webhook-port # 8443
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: mutatingwebhook
webhooks:
  - name: webhookserver.webhookserver-namespace.svc # service.namespace.svc
    admissionReviewVersions: ["v1"]
    sideEffects: None
    matchPolicy: Equivalent # API Group or version independant 
    clientConfig:
      # 1) 
      # url : "https://..." doesn't need caBundle verification 
      # or 
      # 2) 
      service:
        name: webhookserver 
        namespace: default #webhookserver-namespace
        path: "/mutate" # default path: /
        port: 443 # default port: 443
      caBundle: ${CA_B64} # required for path method

    # to select by objects labeled  
    #objectSelector:
    #  matchLabels:
    #    foo: bar

    namespaceSelector:
      matchLabels:
        kubewebhook: enabled # apply webhook to all objects deployed within namespace labelled:  kubewebhook: enabled

    # not sure about : 
    #dryrun: true # to specify that there aren't any sideEffects and skip
    rules:
      - operations: [ "CREATE" ] # apply webhook to all CREATE objects 
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*"]
        scope: "*"
---