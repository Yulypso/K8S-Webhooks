apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ws-role
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: thierry
  namespace: webhookserver-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: thierry
roleRef: 
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ws-role
subjects: 
- kind: ServiceAccount
  name: thierry
  namespace: webhookserver-ns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhookserver
  namespace: webhookserver-ns
  labels: 
    app: webhookserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhookserver
  template:
    metadata:
      labels:
        app: webhookserver
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1700
        runAsGroup: 3000
        fsGroup: 2000
      containers:
      - name: webhookserver
        image: yulypso/webhookserver:v0.0.3
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
        resources: 
          limits:
            memory: 512Mi
            cpu: "1"
        ports:
        - containerPort: 8443
          name: webhook-port
        volumeMounts:
        - name: webhookserver-volume
          mountPath: /etc/secrets/tls
          readOnly: true
      serviceAccountName: thierry
      volumes:
      - name: webhookserver-volume
        secret:
          secretName: webhookserver-tls
---
apiVersion: v1
kind: Service
metadata:
  name: webhookserver
  namespace: webhookserver-ns
spec:
  selector:
    app: webhookserver
  ports:
    - port: 443
      targetPort: webhook-port # 8443
